Here are the recommended steps:
- First, build out your blockchain from the blockchain assignment.
- You’ll want to adapt this blockchain to store transactions rather than random strings. We recommend creating a Transaction class, which includes a from (public key), to (public key), amount (int), and signature (string). Have each block contain one transaction for simplicity.

- Make your blockchain validate that all of the transactions within the blockchain are valid—i.e., each transaction does not put any party into a negative balance. You’ll want to start all blockchains with a genesis block that gives someone seed money to begin the chain.


- Implement a fork choice rule. Given your current blockchain and a new blockchain, write a function that replaces the old blockchain with a new blockchain if it’s longer than your current blockchain (and valid!)

- Go back to your gossip protocol and adapt it to gossip blockchains rather than random messages. You may want to use a good marshalling library for your language to make it easier to serialize and deserialize your objects. Apply the fork choice rule to any messages you receive.
- Give each node a public key and private key. Give it an endpoint so that another node can query it for its public key. Make it automatically sign each transaction it creates.
- Give each node a transfer endpoint, which will make it query another node for its public key, and then transfer that node some of its money.
- See the blockchain in action!

QUESTIONS:
-----------
in order to verify, you need the public key. but so far only the address is exposed?
- for now, omitting the idea of public address


NEXT:
--------
- check that whoever is paying has enough $ for a transaction to be valid
- start networking?

-----------

- refactor
- ui
  - have servers post data to separate server, have that establish socket
  -

- get gossip protocol working
- broadcast transactions when you see them
- adjust iframe to send that endpoint
- when a block is created, add it to your chain and broadcast blockchain
- if you see a longer blockchain, make yours
- adjust ui to show balances/ blockchain height


questions from video:
----------------------
what is this "bitcoin per kilobyte" idea? ~28 min in
when you receive a block, how do you know which transactions in your mempool it covers?








-------------
blockchain isn;t valid!!

1. either create =block with tranasctions or merkle root
2. show balance in UI
3. make UI dope!

get mining working?
hashing signatures doesn't work


when we get a block, query to see which transactions we should remove
